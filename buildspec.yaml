version: 0.2
# 1. Generates the SAM template in preparation of Lambda stack update.
# 2. Deploys the Bot UI web page to S3.
# Requires environment variables to be defined, such as ARTIFACT_BUCKET, WEBSITE_BUCKET, etc.

env:
  variables:
    JS_CONFIG_FILE : "botui/js/config.js"
    # other environment variables required from the build project:
    #  ARTIFACT_BUCKET
    #  WEBSITE_BUCKET
    #  REGION
    #  IDENTITY_POOL_ID
    #  USER_POOL_ID
    #  USER_POOL_CLIENT_ID
    #  API_URL
    #  TEST_USER_SECRET_ID
phases:
  install:
    commands:
      - echo "Installing jq..."
      - curl -qL -o jq https://stedolan.github.io/jq/download/linux64/jq && chmod +x ./jq
  pre_build:
    commands:
      - # Setup Test User, 
      - TEST_USER_NAME=user10
      - TEST_USER_CRED=`date | md5sum | head -c${1:-10}`
      - echo "Creating Test User $TEST_USER_NAME"
      - chmod +x ./create-cognito-user.sh
      - ./create-cognito-user.sh

      ## Set parameters into config Javascript file for the website demo page.
      - echo "Setting parameters into the website config.js file."
      - sed -i -e "s/\('region'[[:space:]]*:\).*$/\1 '$AWS_DEFAULT_REGION',/g" $JS_CONFIG_FILE
      - sed -i -e "s/\('identity_pool_id'[[:space:]]*:\).*$/\1 '$IDENTITY_POOL_ID',/g" $JS_CONFIG_FILE
      - sed -i -e "s/\('user_pool_id'[[:space:]]*:\).*$/\1 '$USER_POOL_ID',/g" $JS_CONFIG_FILE
      - sed -i -e "s/\('user_pool_client_id'[[:space:]]*:\).*$/\1 '$USER_POOL_CLIENT_ID',/g" $JS_CONFIG_FILE
      - sed -i -e "s|\('api_url'[[:space:]]*:\).*$|\1 '$API_URL',|g" $JS_CONFIG_FILE
      - sed -i -e "s/\('test_user_name'[[:space:]]*:\).*$/\1 '$TEST_USER_NAME',/g" $JS_CONFIG_FILE
      - sed -i -e "s/\('test_user_cred'[[:space:]]*:\).*$/\1 '$TEST_USER_CRED'/g" $JS_CONFIG_FILE
      - cat $JS_CONFIG_FILE
  build:
    commands:
      - echo "Building  build."
      # Generate the deployable CloudFormation template from the SAM template
      - aws cloudformation package --template-file cloudformation/MultilanguageApi.yaml --s3-bucket ${ARTIFACT_BUCKET}
                                   --output-template-file MultilanguageApi-deployable.yaml
      # Deploy the Bot UI web page 
      # This should actually be a 2 phase deploment activity: Website deploy followed by API deploy 
      # Perhaps it would be more sensible to first update the API, followed by the website? 
      - aws s3 sync --acl public-read --delete ./botui/ s3://${WEBSITE_BUCKET}/botui/
      - aws s3 cp --acl public-read ./botui/favicon.ico s3://${WEBSITE_BUCKET}/favicon.ico

artifacts:
  type: zip
  files:
    - MultilanguageApi-deployable.yaml
