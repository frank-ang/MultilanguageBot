AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Multilanguage Bot.

Parameters: 

  CognitoStackName:
    Description: Name of a Cloudformation stack containing the cross-stack Cognito resources for AuthN
    Type: String
    AllowedPattern : "^[a-zA-Z][a-zA-Z0-9]*$"

Resources:
  # Bot API
  # FYI, a good reference to setup Cognito Auth per API methods:
  # https://github.com/awslabs/serverless-application-model/blob/master/examples/2016-10-31/api_cognito_auth/template.yaml
  MultilanguageBotApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: PROD
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !Sub
              - arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPoolId}
              - CognitoUserPoolId:
                  Fn::ImportValue: !Sub ${CognitoStackName}-UserPool

  MultilanguageBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lex/botTranslator.lambda_handler
      Runtime: python3.6
      CodeUri: ./
      Events:  
        MultilanguageBotApi:
          Type: Api
          Properties:
            RestApiId: !Ref MultilanguageBotApi
            Path: /MultilanguageBot
            Method: POST
      Policies:
       - AWSLambdaExecute # Managed Policy
       - AmazonLexReadOnly # Managed Policy
       - ComprehendReadOnly # Managed Policy
       - AmazonLexRunBotsOnly # Managed Policy
       - TranslateReadOnly # Managed Policy

Outputs:
  MultilanguageBotFunction:
    Value: !Ref MultilanguageBotFunction
  MultilanguageBotApi:
    Value: !Ref MultilanguageBotApi


